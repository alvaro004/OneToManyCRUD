/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package partidoonetomany;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alvaro Llano
 */
public class VistaCargarEquipos extends javax.swing.JInternalFrame {
    
    EntityManagerFactory emf = null;
    EntityManager em = null;

    /**
     * Creates new form Equipo
     */
    public VistaCargarEquipos() {
        initComponents();
        
        emf = null;
        em = null;
        emf = Persistence.createEntityManagerFactory("C:/base/PartidoOneToMany.odb");
        em = emf.createEntityManager();
        
        TextPrompt placeholder1 = new TextPrompt("Ingrese el Id del Equipo", idEquipo);
        TextPrompt placeholder2 = new TextPrompt("Ingrese el nombre del Equipo", nombreEquipo);
 
        actualizar.setEnabled(false);
        borrar.setEnabled(false);
        
        listarEquipo();
    }
    
    public void listarEquipo() {
        try {
            Query consultaPersona = em.createQuery("SELECT equipo1 FROM Equipo equipo1");
            List<Equipo> ResultadosPersona = consultaPersona.getResultList();
            DefaultTableModel modelo = (DefaultTableModel) tableEquipo.getModel();
            modelo.setRowCount(0);

            for (Equipo e : ResultadosPersona) {
                modelo.addRow(new Object[]{e.getIdEquipo(),e.getNombreEquipo(),});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e); 
        }
    }
    
    public Equipo getDatos(){
        String idequipo = idEquipo.getText();
        String nombre = nombreEquipo.getText();
        
        Equipo equipo = new Equipo(idequipo, nombre);
        
        return equipo;
    }
    
    public void setForm(String idEquipo, String nombreEquipo){
        this.idEquipo.setText(idEquipo);
        this.nombreEquipo.setText(nombreEquipo);
        
    }
    
    public Object getFilaTable(){
        int fila = tableEquipo.getSelectedRow();
        Object id = tableEquipo.getValueAt(fila, 0);
        return id;       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idEquipo = new javax.swing.JTextField();
        nombreEquipo = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEquipo = new javax.swing.JTable();
        cancelar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);

        jLabel1.setBackground(new java.awt.Color(255, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cargar Equipos");

        guardar.setText("Guardar");
        guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarMouseClicked(evt);
            }
        });

        borrar.setText("Borrar");
        borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borrarMouseClicked(evt);
            }
        });

        actualizar.setText("Actualizar");
        actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizarMouseClicked(evt);
            }
        });
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        tableEquipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "EQUIPO"
            }
        ));
        tableEquipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEquipoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEquipo);

        cancelar.setText("Cancelar");
        cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idEquipo)
                    .addComponent(nombreEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(borrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nombreEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarActionPerformed

              
    private void guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseClicked
        // TODO add your handling code here:
        try {                  
            //SE EXTRAEN LOS DATOS DEL FORMULARIO POR MEDIO DE ESTE METODO QUE DECUELVE UN OBJETO CON LOS DATOSS
            Equipo equipo1 = getDatos();        

            //Equipo equipo1 = new Equipo(idequipo, nombre); 
            em.getTransaction().begin();
            em.persist(equipo1);
            em.getTransaction().commit();

            //VACIAMOS LOS CAMPOS
            setForm("", "");

            JOptionPane.showMessageDialog(rootPane, "Guardado Exitoso");      
            listarEquipo();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error al guardar: ");           
        }

    }//GEN-LAST:event_guardarMouseClicked

    private void tableEquipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEquipoMouseClicked
        try {
            idEquipo.setEnabled(false);
            //SE BUSCA EL ID DE LA FILA SELECIONANDA LLAMANDO A ESTE METODO
            Object id = getFilaTable();        

            Equipo equipo = em.find(Equipo.class, id);

            //ENVIAMOS LOS DATOS DE EQUIPO AL FORM
            setForm(equipo.getIdEquipo(),equipo.getNombreEquipo());

            guardar.setEnabled(false);
            borrar.setEnabled(true);
            actualizar.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "NO se puede seleccionar la fila");           
        }

    }//GEN-LAST:event_tableEquipoMouseClicked

    private void cancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarMouseClicked
        //VACIAMOS LOS CAMPOS
        setForm("", "");
        
        idEquipo.setEnabled(true);
        
        guardar.setEnabled(true);
        borrar.setEnabled(false);
        actualizar.setEnabled(false);
        listarEquipo();
    }//GEN-LAST:event_cancelarMouseClicked

    private void actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMouseClicked
        try {
            //SE BUSCA EL ID DE LA FILA SELECIONANDA LLAMANDO A ESTE METODO
            Object id = getFilaTable();  
            //SE ENCUENTRA EL OBJETO DESEADO Y SE GUARDA EN EL TIPO DE DATO DEL OBJETO
            Equipo equipo = em.find(Equipo.class, id);
            //SE TRAEN LOS DATOS DEL FORMULARIO Y SE GUARDAN EN UN OBJETO DEL MISMO TIPO
            Equipo equipo1 = getDatos(); 
            //SE MODIFICA EL VALOR DEL ATRIBUTO DEL OBJETO
            equipo.setNombreEquipo(equipo1.getNombreEquipo());
            //SE GUARDA EL OBJETO MODIFICADO
            em.getTransaction().begin();
            em.persist(equipo);
            em.getTransaction().commit();
            //SE VACIA EL FORM
            setForm("", "");
            idEquipo.setEnabled(true);

            guardar.setEnabled(true);
            borrar.setEnabled(false);
            actualizar.setEnabled(false);

            JOptionPane.showMessageDialog(rootPane, "Actualizado Exitoso");      

            listarEquipo();          
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error al Actualizar: "); 
        }
    }//GEN-LAST:event_actualizarMouseClicked

    private void borrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrarMouseClicked
        try {
            Object id = getFilaTable();

            Equipo equipo1 = em.find(Equipo.class, id);        
            em.getTransaction().begin();
            em.remove(equipo1);
            em.getTransaction().commit();

            setForm("", "");
            JOptionPane.showMessageDialog(rootPane, "Borrado Exitoso");      

            idEquipo.setEnabled(true);

            guardar.setEnabled(true);
            borrar.setEnabled(false);
            actualizar.setEnabled(false);

            listarEquipo();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error al Borrar: "); 
        }
          
    }//GEN-LAST:event_borrarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton borrar;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton guardar;
    private javax.swing.JTextField idEquipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreEquipo;
    private javax.swing.JTable tableEquipo;
    // End of variables declaration//GEN-END:variables
}
