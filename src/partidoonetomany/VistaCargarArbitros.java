/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package partidoonetomany;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alvaro Llano
 */
public class VistaCargarArbitros extends javax.swing.JInternalFrame {

    EntityManagerFactory emf = null;
    EntityManager em = null;
    
    /**
     * Creates new form VistaCargarArbitros
     */
    public VistaCargarArbitros() {
        initComponents();
        emf = null;
        em = null;
        emf = Persistence.createEntityManagerFactory("C:/base/PartidoOneToMany.odb");
        em = emf.createEntityManager();
        
        
        TextPrompt placeholder1 = new TextPrompt("Ingrese el Id del Arbitro", idArbitroText);
        TextPrompt placeholder2 = new TextPrompt("Ingrese el nombre del Arbitro", nombreArbitroText);

        actualizar.setEnabled(false);
        borrar.setEnabled(false);
        listarArbitros();
    }
    
    public void listarArbitros() {
        
        try {
            Query consultaArbitros = em.createQuery("SELECT arbitro FROM Arbitro arbitro");
            List<Arbitro> ResultadosArbitro = consultaArbitros.getResultList();
            DefaultTableModel modelo = (DefaultTableModel) tableArbitro.getModel();
            modelo.setRowCount(0);
        
            for (Arbitro a : ResultadosArbitro) {
                modelo.addRow(new Object[]{a.getIdArbitro(), a.getNombreArbitro()});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e); 
        }   
    }
    
    public Arbitro getDatosArbitro(){ 
        String idequipo = idArbitroText.getText();
        String nombre = nombreArbitroText.getText();
        
        Arbitro arbitro = new Arbitro(idequipo, nombre);
        
        return arbitro;
    }
    
    public void setArbitroForm(String idArbitro, String nombreArbitro){
        idArbitroText.setText(idArbitro);
        nombreArbitroText.setText(nombreArbitro);
        
    }
    
    public Object getFilaArbitro(){
        int fila = tableArbitro.getSelectedRow();
        Object id = tableArbitro.getValueAt(fila, 0);
        return id;       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idArbitroText = new javax.swing.JTextField();
        nombreArbitroText = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableArbitro = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);

        idArbitroText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idArbitroTextActionPerformed(evt);
            }
        });

        nombreArbitroText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreArbitroTextActionPerformed(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarMouseClicked(evt);
            }
        });

        actualizar.setText("Actualizar");
        actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizarMouseClicked(evt);
            }
        });
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        borrar.setText("Borrar");
        borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borrarMouseClicked(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarMouseClicked(evt);
            }
        });

        tableArbitro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ARBITRO"
            }
        ));
        tableArbitro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableArbitroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableArbitro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actualizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(borrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nombreArbitroText, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idArbitroText, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idArbitroText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nombreArbitroText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idArbitroTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idArbitroTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idArbitroTextActionPerformed

    private void nombreArbitroTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreArbitroTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreArbitroTextActionPerformed

    private void guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseClicked
        try {
            //SE EXTRAEN LOS DATOS DEL FORMULARIO POR MEDIO DE ESTE METODO QUE DECUELVE UN OBJETO CON LOS DATOSS
            Arbitro arbitro = getDatosArbitro();

            em.getTransaction().begin();
            em.persist(arbitro);
            em.getTransaction().commit();

            setArbitroForm("","");

            JOptionPane.showMessageDialog(rootPane, "Guardado Exitoso");

            listarArbitros();           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e); 
        }

    }//GEN-LAST:event_guardarMouseClicked

    private void actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarMouseClicked
        try {
            //SE TRAE EL ID DE LA FILA SELECCIONADA POR MEDIO DEL METODO
            Object id = getFilaArbitro();

            Arbitro arbitro = em.find(Arbitro.class, id);

            Arbitro arbitroDatos = getDatosArbitro();

            //ENVIAMOS EL NUEVO VALOR AL OBJETO AARBITRO POR MEDIO DE SU SETTER
            arbitro.setNombreArbitro(arbitroDatos.getNombreArbitro());

            em.getTransaction().begin();
            em.persist(arbitro);
            em.getTransaction().commit();

            //VACIAR LOS CAMPOS DEL FORMULARIO 
            setArbitroForm("", "");

            idArbitroText.setEnabled(true);

            guardar.setEnabled(true);
            borrar.setEnabled(false);
            actualizar.setEnabled(false);

            JOptionPane.showMessageDialog(rootPane, "Actualizado Exitoso");

            listarArbitros();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e); 
        }
    }//GEN-LAST:event_actualizarMouseClicked

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarActionPerformed

    private void borrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrarMouseClicked
        try {
            Object id = getFilaArbitro();
            Arbitro arbitro = em.find(Arbitro.class, id);

            em.getTransaction().begin();
            em.remove(arbitro);
            em.getTransaction().commit();

            JOptionPane.showMessageDialog(rootPane, "Borrado Exitoso");

            setArbitroForm("", "");

            idArbitroText.setEnabled(true);

            guardar.setEnabled(true);
            borrar.setEnabled(false);
            actualizar.setEnabled(false);

            listarArbitros();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_borrarMouseClicked

    private void cancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarMouseClicked
        //VACIAR LOS CAMPOS DEL FORMULARIO 
        setArbitroForm("", "");

        //HABILITAR EL CAMPO DEL ID
        idArbitroText.setEnabled(true);

        guardar.setEnabled(true);
        borrar.setEnabled(false);
        actualizar.setEnabled(false);
        
    }//GEN-LAST:event_cancelarMouseClicked

    private void tableArbitroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableArbitroMouseClicked
        try {
            idArbitroText.setEnabled(false);

            Object id = getFilaArbitro();


            Arbitro arbitro = em.find(Arbitro.class, id);

            setArbitroForm(arbitro.getIdArbitro(),arbitro.getNombreArbitro());

            guardar.setEnabled(false);
            borrar.setEnabled(true);
            actualizar.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_tableArbitroMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton borrar;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton guardar;
    private javax.swing.JTextField idArbitroText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreArbitroText;
    private javax.swing.JTable tableArbitro;
    // End of variables declaration//GEN-END:variables
}
